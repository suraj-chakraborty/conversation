{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\react-chatengine-demo\\\\src\\\\components\\\\ChatAvatar\\\\ChatAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport { fb } from 'service';\nimport { useChat } from 'context';\nimport React, { useEffect, useState } from 'react';\nimport { Image } from 'semantic-ui-react';\nexport const ChatAvatar = ({\n  chat,\n  username,\n  className\n}) => {\n  _s();\n\n  const {\n    chatConfig\n  } = useChat();\n  const [avatar, setAvatar] = useState('');\n  useEffect(() => {\n    fb.firestore.collection('chatUsers').where('userName', '==', username).get().then(snap => {\n      var _snap$docs$;\n\n      const data = (_snap$docs$ = snap.docs[0]) === null || _snap$docs$ === void 0 ? void 0 : _snap$docs$.data();\n\n      if (data === null || data === void 0 ? void 0 : data.avatar) {\n        setAvatar(data.avatar);\n      }\n    });\n  }, [chat, chatConfig, username]);\n  return avatar ? /*#__PURE__*/_jsxDEV(Image, {\n    className: className || 'chat-list-avatar',\n    src: avatar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className || 'empty-avatar',\n    children: chat.people.find(p => p.person.username !== chatConfig.userName).person.username[0].toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatAvatar, \"3XoFMFvmyCoA2EKPmFWLGWvzAEo=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatAvatar\");","map":{"version":3,"sources":["F:/react/react-chatengine-demo/src/components/ChatAvatar/ChatAvatar.jsx"],"names":["fb","useChat","React","useEffect","useState","Image","ChatAvatar","chat","username","className","chatConfig","avatar","setAvatar","firestore","collection","where","get","then","snap","data","docs","people","find","p","person","userName","toUpperCase"],"mappings":";;;;;AAAA,SAASA,EAAT,QAAmB,SAAnB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAiBT,OAAO,EAA9B;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,EAAE,CAACa,SAAH,CACGC,UADH,CACc,WADd,EAEGC,KAFH,CAES,UAFT,EAEqB,IAFrB,EAE2BP,QAF3B,EAGGQ,GAHH,GAIGC,IAJH,CAIQC,IAAI,IAAI;AAAA;;AACZ,YAAMC,IAAI,kBAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,CAAH,gDAAG,YAAcD,IAAd,EAAb;;AACA,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAER,MAAV,EAAkB;AAChBC,QAAAA,SAAS,CAACO,IAAI,CAACR,MAAN,CAAT;AACD;AACF,KATH;AAUD,GAXQ,EAWN,CAACJ,IAAD,EAAOG,UAAP,EAAmBF,QAAnB,CAXM,CAAT;AAaA,SAAOG,MAAM,gBACX,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,SAAS,IAAI,kBAA/B;AAAmD,IAAA,GAAG,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,UADW,gBAGX;AAAK,IAAA,SAAS,EAAEF,SAAS,IAAI,cAA7B;AAAA,cACGF,IAAI,CAACc,MAAL,CACEC,IADF,CACOC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAAShB,QAAT,KAAsBE,UAAU,CAACe,QAD7C,EAEED,MAFF,CAEShB,QAFT,CAEkB,CAFlB,EAEqBkB,WAFrB;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AASD,CA1BM;;GAAMpB,U;UACYL,O;;;KADZK,U","sourcesContent":["import { fb } from 'service';\r\nimport { useChat } from 'context';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Image } from 'semantic-ui-react';\r\n\r\nexport const ChatAvatar = ({ chat, username, className }) => {\r\n  const { chatConfig } = useChat();\r\n  const [avatar, setAvatar] = useState('');\r\n\r\n  useEffect(() => {\r\n    fb.firestore\r\n      .collection('chatUsers')\r\n      .where('userName', '==', username)\r\n      .get()\r\n      .then(snap => {\r\n        const data = snap.docs[0]?.data();\r\n        if (data?.avatar) {\r\n          setAvatar(data.avatar);\r\n        }\r\n      });\r\n  }, [chat, chatConfig, username]);\r\n\r\n  return avatar ? (\r\n    <Image className={className || 'chat-list-avatar'} src={avatar} />\r\n  ) : (\r\n    <div className={className || 'empty-avatar'}>\r\n      {chat.people\r\n        .find(p => p.person.username !== chatConfig.userName)\r\n        .person.username[0].toUpperCase()}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}