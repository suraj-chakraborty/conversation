{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\chat_app\\\\react-chatengine-demo\\\\src\\\\components\\\\ChatToolbar\\\\ChatToolbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useChat } from 'context';\nimport { joinUsernames } from 'helpers';\nimport { Icon } from 'semantic-ui-react';\nimport { SearchUsers } from 'components';\nexport const ChatToolbar = () => {\n  _s();\n\n  const {\n    selectedChat,\n    chatConfig\n  } = useChat();\n  const {\n    searching,\n    setSearching\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-text\",\n        children: joinUsernames(selectedChat.people, chatConfig.userName).slice(0, 50)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-icon\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          color: \"grey\",\n          name: \"user plus\",\n          onClick: () => setSearching(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchUsers, {\n      visible: searching,\n      closeFn: () => setSearching(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatToolbar, \"cK5K/bdb0nWWvHFN/eqwN8mn/vA=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatToolbar\");","map":{"version":3,"sources":["F:/react/chat_app/react-chatengine-demo/src/components/ChatToolbar/ChatToolbar.jsx"],"names":["useState","useChat","joinUsernames","Icon","SearchUsers","ChatToolbar","selectedChat","chatConfig","searching","setSearching","people","userName","slice"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BN,OAAO,EAA5C;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGE,aAAa,CAACI,YAAY,CAACI,MAAd,EAAsBH,UAAU,CAACI,QAAjC,CAAb,CAAwDC,KAAxD,CAA8D,CAA9D,EAAiE,EAAjE;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAED,SAAtB;AAAiC,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAkBD,CAtBM;;GAAMJ,W;UAC0BJ,O;;;KAD1BI,W","sourcesContent":["import { useState } from 'react';\r\nimport { useChat } from 'context';\r\nimport { joinUsernames } from 'helpers';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { SearchUsers } from 'components';\r\n\r\nexport const ChatToolbar = () => {\r\n  const { selectedChat, chatConfig } = useChat();\r\n  const { searching, setSearching } = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-toolbar\">\r\n        <div className=\"chat-header-text\">\r\n          {joinUsernames(selectedChat.people, chatConfig.userName).slice(0, 50)}\r\n        </div>\r\n\r\n        <div className=\"add-user-icon\">\r\n          <Icon\r\n            color=\"grey\"\r\n            name=\"user plus\"\r\n            onClick={() => setSearching(true)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <SearchUsers visible={searching} closeFn={() => setSearching(false)} />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}