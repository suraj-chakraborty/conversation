{"ast":null,"code":"import _slicedToArray from\"F:/react/conversation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{useState}from'react';import{useChat}from'context';import{joinUsernames}from'helpers';import{Icon}from'semantic-ui-react';import{SearchUsers}from'components';export var ChatToolbar=function ChatToolbar(){var _useChat=useChat(),selectedChat=_useChat.selectedChat,chatConfig=_useChat.chatConfig;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),searching=_useState2[0],setSearching=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-toolbar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header-text\",children:joinUsernames(selectedChat.people,chatConfig.userName).slice(0,50)}),/*#__PURE__*/_jsx(\"div\",{className:\"add-user-icon\",children:/*#__PURE__*/_jsx(Icon,{color:\"grey\",name:\"user plus\",onClick:function onClick(){return setSearching(true);}})})]}),/*#__PURE__*/_jsx(SearchUsers,{closeFn:function closeFn(){return setSearching(false);},visible:searching})]});};","map":{"version":3,"sources":["F:/react/conversation/src/components/ChatToolbar/ChatToolbar.jsx"],"names":["useState","useChat","joinUsernames","Icon","SearchUsers","ChatToolbar","selectedChat","chatConfig","searching","setSearching","people","userName","slice"],"mappings":"yRAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,OAAT,KAAwB,SAAxB,CACA,OAASC,aAAT,KAA8B,SAA9B,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,WAAT,KAA4B,YAA5B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,cACMJ,OAAO,EADb,CACvBK,YADuB,UACvBA,YADuB,CACTC,UADS,UACTA,UADS,eAEGP,QAAQ,CAAC,KAAD,CAFX,wCAExBQ,SAFwB,eAEbC,YAFa,eAI/B,mBACE,wCACE,aAAK,SAAS,CAAC,cAAf,wBACE,YAAK,SAAS,CAAC,kBAAf,UACGP,aAAa,CAACI,YAAY,CAACI,MAAd,CAAsBH,UAAU,CAACI,QAAjC,CAAb,CAAwDC,KAAxD,CAA8D,CAA9D,CAAiE,EAAjE,CADH,EADF,cAKE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,IAAD,EACE,KAAK,CAAC,MADR,CAEE,IAAI,CAAC,WAFP,CAGE,OAAO,CAAE,yBAAMH,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAHX,EADF,EALF,GADF,cAcE,KAAC,WAAD,EAAa,OAAO,CAAE,yBAAMA,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAAtB,CAAiD,OAAO,CAAED,SAA1D,EAdF,GADF,CAkBD,CAtBM","sourcesContent":["import { useState } from 'react';\r\nimport { useChat } from 'context';\r\nimport { joinUsernames } from 'helpers';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { SearchUsers } from 'components';\r\n\r\nexport const ChatToolbar = () => {\r\n  const { selectedChat, chatConfig } = useChat();\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-toolbar\">\r\n        <div className=\"chat-header-text\">\r\n          {joinUsernames(selectedChat.people, chatConfig.userName).slice(0, 50)}\r\n        </div>\r\n\r\n        <div className=\"add-user-icon\">\r\n          <Icon\r\n            color=\"grey\"\r\n            name=\"user plus\"\r\n            onClick={() => setSearching(true)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <SearchUsers closeFn={() => setSearching(false)} visible={searching} />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}