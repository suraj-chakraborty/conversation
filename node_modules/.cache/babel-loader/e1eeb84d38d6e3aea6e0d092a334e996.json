{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\conversation\\\\src\\\\components\\\\Signup\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { fb } from 'service';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FormField } from 'components/FormField/FormField';\nimport { defaultValues, validationSchema } from './formikConfig';\nexport const Signup = () => {\n  _s();\n\n  const history = useHistory();\n  const [serverError, setServerError] = useState('');\n\n  const signup = ({\n    email,\n    userName,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    fb.auth.createUserWithEmailAndPassword(email, password).then(res => {\n      var _res$user;\n\n      if (res === null || res === void 0 ? void 0 : (_res$user = res.user) === null || _res$user === void 0 ? void 0 : _res$user.uid) {\n        fetch('/api/createUser', {\n          method: 'POST',\n          body: JSON.stringify({\n            userName,\n            userId: res.user.uid\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(() => {\n          fb.firestore.collection('chatUsers').doc(res.user.uid).set({\n            userName,\n            avatar: ''\n          });\n        });\n      } else {\n        setServerError(\"We're having trouble signing you up. Please try again.\");\n      }\n    }).catch(err => {\n      if (err.code === 'auth/email-already-in-use') {\n        setServerError('An account with this email already exists');\n      } else {\n        setServerError(\"We're having trouble signing you up. Please try again.\");\n      }\n    }).finally(() => setSubmitting(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: signup,\n      validateOnMount: true,\n      initialValues: defaultValues,\n      validationSchema: validationSchema,\n      children: ({\n        isValid,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          name: \"userName\",\n          label: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          type: \"password\",\n          name: \"verifyPassword\",\n          label: \"Verify Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-link-container\",\n          children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"auth-link\",\n            onClick: () => history.push('login'),\n            children: \"Log In!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting || !isValid,\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !!serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"gImVZM9eszjceQm/ycQBpQtwQPM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["F:/react/conversation/src/components/Signup/Signup.jsx"],"names":["fb","Form","Formik","React","useState","useHistory","FormField","defaultValues","validationSchema","Signup","history","serverError","setServerError","signup","email","userName","password","setSubmitting","auth","createUserWithEmailAndPassword","then","res","user","uid","fetch","method","body","JSON","stringify","userId","headers","firestore","collection","doc","set","avatar","catch","err","code","finally","isValid","isSubmitting","push"],"mappings":"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","sourcesContent":["import { fb } from 'service';\r\nimport { Form, Formik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormField } from 'components/FormField/FormField';\r\nimport { defaultValues, validationSchema } from './formikConfig';\r\n\r\nexport const Signup = () => {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState('');\r\n\r\n  const signup = ({ email, userName, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        if (res?.user?.uid) {\r\n          fetch('/api/createUser', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              userName,\r\n              userId: res.user.uid,\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }).then(() => {\r\n            fb.firestore\r\n              .collection('chatUsers')\r\n              .doc(res.user.uid)\r\n              .set({ userName, avatar: '' });\r\n          });\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 'auth/email-already-in-use') {\r\n          setServerError('An account with this email already exists');\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h1>Signup</h1>\r\n      <Formik\r\n        onSubmit={signup}\r\n        validateOnMount={true}\r\n        initialValues={defaultValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isValid, isSubmitting }) => (\r\n          <Form>\r\n            <FormField name=\"userName\" label=\"User Name\" />\r\n            <FormField name=\"email\" label=\"Email\" type=\"email\" />\r\n            <FormField name=\"password\" label=\"Password\" type=\"password\" />\r\n            <FormField\r\n              type=\"password\"\r\n              name=\"verifyPassword\"\r\n              label=\"Verify Password\"\r\n            />\r\n\r\n            <div className=\"auth-link-container\">\r\n              Already have an account?{' '}\r\n              <span className=\"auth-link\" onClick={() => history.push('login')}>\r\n                Log In!\r\n              </span>\r\n            </div>\r\n\r\n            <button disabled={isSubmitting || !isValid} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      {!!serverError && <div className=\"error\">{serverError}</div>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}