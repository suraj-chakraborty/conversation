{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\conversation\\\\src\\\\context\\\\ChatContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { fb } from 'service';\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { newChat, leaveChat, deleteChat, getMessages } from 'react-chat-engine';\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children,\n  authUser\n}) => {\n  _s();\n\n  const [myChats, setMyChats] = useState();\n  const [chatConfig, setChatConfig] = useState();\n  const [selectedChat, setSelectedChat] = useState();\n\n  const createChatClick = () => {\n    newChat(chatConfig, {\n      title: ''\n    });\n  };\n\n  const deleteChatClick = chat => {\n    const isAdmin = chat.admin === chatConfig.userName;\n\n    if (isAdmin && window.confirm('Are you sure you want to delete this chat?')) {\n      deleteChat(chatConfig, chat.id);\n    } else if (window.confirm('Are you sure you want to leave this chat?')) {\n      leaveChat(chatConfig, chat.id, chatConfig.userName);\n    }\n  };\n\n  const selectChatClick = chat => {\n    getMessages(chatConfig, chat.id, messages => {\n      setSelectedChat({ ...chat,\n        messages\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      fb.firestore.collection('chatUsers').doc(authUser.uid).onSnapshot(snap => {\n        setChatConfig({\n          userSecret: authUser.uid,\n          avatar: snap.data().avatar,\n          userName: snap.data().userName,\n          projectID: '4c01f6ef-6fc4-47d8-a6d6-a1403a3fcce1'\n        });\n      });\n    }\n  }, [authUser, setChatConfig]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      myChats,\n      setMyChats,\n      chatConfig,\n      selectedChat,\n      setChatConfig,\n      setSelectedChat,\n      selectChatClick,\n      deleteChatClick,\n      createChatClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatProvider, \"JGNPaDS5TEn+G18Xg85PM/82XYM=\");\n\n_c = ChatProvider;\nexport const useChat = () => {\n  _s2();\n\n  const {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat,\n    setChatConfig,\n    setSelectedChat,\n    selectChatClick,\n    deleteChatClick,\n    createChatClick\n  } = useContext(ChatContext);\n  return {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat,\n    setChatConfig,\n    setSelectedChat,\n    selectChatClick,\n    deleteChatClick,\n    createChatClick\n  };\n};\n\n_s2(useChat, \"rx44Zht5z5/3BbN2aGo0k7t+atE=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"sources":["F:/react/conversation/src/context/ChatContext.jsx"],"names":["fb","createContext","useContext","useEffect","useState","newChat","leaveChat","deleteChat","getMessages","ChatContext","ChatProvider","children","authUser","myChats","setMyChats","chatConfig","setChatConfig","selectedChat","setSelectedChat","createChatClick","title","deleteChatClick","chat","isAdmin","admin","userName","window","confirm","id","selectChatClick","messages","firestore","collection","doc","uid","onSnapshot","snap","userSecret","avatar","data","projectID","useChat"],"mappings":"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","sourcesContent":["import { fb } from 'service';\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { newChat, leaveChat, deleteChat, getMessages } from 'react-chat-engine';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children, authUser }) => {\r\n  const [myChats, setMyChats] = useState();\r\n  const [chatConfig, setChatConfig] = useState();\r\n  const [selectedChat, setSelectedChat] = useState();\r\n\r\n  const createChatClick = () => {\r\n    newChat(chatConfig, { title: '' });\r\n  };\r\n  const deleteChatClick = chat => {\r\n    const isAdmin = chat.admin === chatConfig.userName;\r\n\r\n    if (\r\n      isAdmin &&\r\n      window.confirm('Are you sure you want to delete this chat?')\r\n    ) {\r\n      deleteChat(chatConfig, chat.id);\r\n    } else if (window.confirm('Are you sure you want to leave this chat?')) {\r\n      leaveChat(chatConfig, chat.id, chatConfig.userName);\r\n    }\r\n  };\r\n  const selectChatClick = chat => {\r\n    getMessages(chatConfig, chat.id, messages => {\r\n      setSelectedChat({\r\n        ...chat,\r\n        messages,\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authUser) {\r\n      fb.firestore\r\n        .collection('chatUsers')\r\n        .doc(authUser.uid)\r\n        .onSnapshot(snap => {\r\n          setChatConfig({\r\n            userSecret: authUser.uid,\r\n            avatar: snap.data().avatar,\r\n            userName: snap.data().userName,\r\n            projectID: '4c01f6ef-6fc4-47d8-a6d6-a1403a3fcce1',\r\n          });\r\n        });\r\n    }\r\n  }, [authUser, setChatConfig]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        myChats,\r\n        setMyChats,\r\n        chatConfig,\r\n        selectedChat,\r\n        setChatConfig,\r\n        setSelectedChat,\r\n        selectChatClick,\r\n        deleteChatClick,\r\n        createChatClick,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useChat = () => {\r\n  const {\r\n    myChats,\r\n    setMyChats,\r\n    chatConfig,\r\n    selectedChat,\r\n    setChatConfig,\r\n    setSelectedChat,\r\n    selectChatClick,\r\n    deleteChatClick,\r\n    createChatClick,\r\n  } = useContext(ChatContext);\r\n\r\n  return {\r\n    myChats,\r\n    setMyChats,\r\n    chatConfig,\r\n    selectedChat,\r\n    setChatConfig,\r\n    setSelectedChat,\r\n    selectChatClick,\r\n    deleteChatClick,\r\n    createChatClick,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}