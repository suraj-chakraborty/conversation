{"ast":null,"code":"import _slicedToArray from\"F:/react/conversation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{fb}from'service';import{Form,Formik}from'formik';import React,{useState}from'react';import{useHistory}from'react-router-dom';import{FormField}from'components/FormField/FormField';import{defaultValues,validationSchema}from'./formikConfig';export var Signup=function Signup(){var history=useHistory();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),serverError=_useState2[0],setServerError=_useState2[1];var signup=function signup(_ref,_ref2){var email=_ref.email,userName=_ref.userName,password=_ref.password;var setSubmitting=_ref2.setSubmitting;fb.auth.createUserWithEmailAndPassword(email,password).then(function(res){var _res$user;if(res===null||res===void 0?void 0:(_res$user=res.user)===null||_res$user===void 0?void 0:_res$user.uid){fetch('/api/createUser',{method:'POST',body:JSON.stringify({userName:userName,userId:res.user.uid}),headers:{'Content-Type':'application/json'}}).then(function(){fb.firestore.collection('chatUsers').doc(res.user.uid).set({userName:userName,avatar:''});});}else{setServerError(\"We're having trouble signing you up. Please try again.\");}}).catch(function(err){if(err.code==='auth/email-already-in-use'){setServerError('An account with this email already exists');}else{setServerError(\"We're having trouble signing you up. Please try again.\");}}).finally(function(){return setSubmitting(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Signup\"}),/*#__PURE__*/_jsx(Formik,{onSubmit:signup,validateOnMount:true,initialValues:defaultValues,validationSchema:validationSchema,children:function children(_ref3){var isValid=_ref3.isValid,isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(FormField,{name:\"userName\",label:\"User Name\"}),/*#__PURE__*/_jsx(FormField,{name:\"email\",label:\"Email\",type:\"email\"}),/*#__PURE__*/_jsx(FormField,{name:\"password\",label:\"Password\",type:\"password\"}),/*#__PURE__*/_jsx(FormField,{type:\"password\",name:\"verifyPassword\",label:\"Verify Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-link-container\",children:[\"Already have an account?\",' ',/*#__PURE__*/_jsx(\"span\",{className:\"auth-link\",onClick:function onClick(){return history.push('login');},children:\"Log In!\"})]}),/*#__PURE__*/_jsx(\"button\",{disabled:isSubmitting||!isValid,type:\"submit\",children:\"Sign Up\"})]});}}),!!serverError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:serverError})]});};","map":{"version":3,"sources":["F:/react/conversation/src/components/Signup/Signup.jsx"],"names":["fb","Form","Formik","React","useState","useHistory","FormField","defaultValues","validationSchema","Signup","history","serverError","setServerError","signup","email","userName","password","setSubmitting","auth","createUserWithEmailAndPassword","then","res","user","uid","fetch","method","body","JSON","stringify","userId","headers","firestore","collection","doc","set","avatar","catch","err","code","finally","isValid","isSubmitting","push"],"mappings":"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","sourcesContent":["import { fb } from 'service';\r\nimport { Form, Formik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormField } from 'components/FormField/FormField';\r\nimport { defaultValues, validationSchema } from './formikConfig';\r\n\r\nexport const Signup = () => {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState('');\r\n\r\n  const signup = ({ email, userName, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        if (res?.user?.uid) {\r\n          fetch('/api/createUser', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              userName,\r\n              userId: res.user.uid,\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }).then(() => {\r\n            fb.firestore\r\n              .collection('chatUsers')\r\n              .doc(res.user.uid)\r\n              .set({ userName, avatar: '' });\r\n          });\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 'auth/email-already-in-use') {\r\n          setServerError('An account with this email already exists');\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\",\r\n          );\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h1>Signup</h1>\r\n      <Formik\r\n        onSubmit={signup}\r\n        validateOnMount={true}\r\n        initialValues={defaultValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isValid, isSubmitting }) => (\r\n          <Form>\r\n            <FormField name=\"userName\" label=\"User Name\" />\r\n            <FormField name=\"email\" label=\"Email\" type=\"email\" />\r\n            <FormField name=\"password\" label=\"Password\" type=\"password\" />\r\n            <FormField\r\n              type=\"password\"\r\n              name=\"verifyPassword\"\r\n              label=\"Verify Password\"\r\n            />\r\n\r\n            <div className=\"auth-link-container\">\r\n              Already have an account?{' '}\r\n              <span className=\"auth-link\" onClick={() => history.push('login')}>\r\n                Log In!\r\n              </span>\r\n            </div>\r\n\r\n            <button disabled={isSubmitting || !isValid} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      {!!serverError && <div className=\"error\">{serverError}</div>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}