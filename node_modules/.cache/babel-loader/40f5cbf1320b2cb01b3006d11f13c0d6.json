{"ast":null,"code":"import _slicedToArray from\"F:/react/conversation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{fb}from'service';import{useState}from'react';import{Formik,Form}from'formik';import{FormField}from'components';import{useHistory}from'react-router-dom';import{defaultValues,validationSchema}from'./formikConfig';export var Login=function Login(){var history=useHistory();var _useState=useState(' '),_useState2=_slicedToArray(_useState,2),serverError=_useState2[0],setServerError=_useState2[1];var login=function login(_ref,_ref2){var email=_ref.email,password=_ref.password;var setSubmitting=_ref2.setSubmitting;fb.auth.signInWithEmailAndPassword(email,password).then(function(res){if(!res.user){setServerError('we are unable to log you in. please try again.');}}).catch(function(err){if(err.code==='auth/wrong-password'){setServerError('invalid credential');}else if(err.code==='auth/user-not-found'){setServerError('account does not exist for this email');}else{setServerError('Something went wrong :(');}}).finally(function(){return setSubmitting(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(Formik,{onSubmit:login,validateOnMount:true,initialValues:defaultValues,validationSchema:validationSchema,children:function children(_ref3){var isValid=_ref3.isValid,isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(FormField,{name:\"email\",label:\"Email\",type:\"email\"}),/*#__PURE__*/_jsx(FormField,{name:\"password\",label:\"Password\",type:\"password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-link-container\",children:[\"Don't have an account?\",' ',/*#__PURE__*/_jsx(\"span\",{className:\"auth-link\",onClick:function onClick(){return history.push('signup');},children:\"Sign up!\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!isValid||isSubmitting,children:\"Login\"})]});}}),!!serverError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:serverError})]});};","map":{"version":3,"sources":["F:/react/conversation/src/components/Login/Login.jsx"],"names":["fb","useState","Formik","Form","FormField","useHistory","defaultValues","validationSchema","Login","history","serverError","setServerError","login","email","password","setSubmitting","auth","signInWithEmailAndPassword","then","res","user","catch","err","code","finally","isValid","isSubmitting","push"],"mappings":"oOAAA,OAASA,EAAT,KAAmB,SAAnB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,QAA7B,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,aAAT,CAAwBC,gBAAxB,KAAgD,gBAAhD,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CACzB,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CADyB,cAEaJ,QAAQ,CAAC,GAAD,CAFrB,wCAElBS,WAFkB,eAELC,cAFK,eAIzB,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,YAA4C,IAAzCC,CAAAA,KAAyC,MAAzCA,KAAyC,CAAlCC,QAAkC,MAAlCA,QAAkC,IAApBC,CAAAA,aAAoB,OAApBA,aAAoB,CACxDf,EAAE,CAACgB,IAAH,CACGC,0BADH,CAC8BJ,KAD9B,CACqCC,QADrC,EAEGI,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX,GAAI,CAACA,GAAG,CAACC,IAAT,CAAe,CACbT,cAAc,CAAC,gDAAD,CAAd,CACD,CACF,CANH,EAOGU,KAPH,CAOS,SAAAC,GAAG,CAAI,CACZ,GAAIA,GAAG,CAACC,IAAJ,GAAa,qBAAjB,CAAwC,CACtCZ,cAAc,CAAC,oBAAD,CAAd,CACD,CAFD,IAEO,IAAIW,GAAG,CAACC,IAAJ,GAAa,qBAAjB,CAAwC,CAC7CZ,cAAc,CAAC,uCAAD,CAAd,CACD,CAFM,IAEA,CACLA,cAAc,CAAC,yBAAD,CAAd,CACD,CACF,CAfH,EAgBGa,OAhBH,CAgBW,iBAAMT,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAhBX,EAiBD,CAlBD,CAoBA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,6BADF,cAGE,KAAC,MAAD,EACE,QAAQ,CAAEH,KADZ,CAEE,eAAe,CAAE,IAFnB,CAGE,aAAa,CAAEN,aAHjB,CAIE,gBAAgB,CAAEC,gBAJpB,UAMG,4BAAGkB,CAAAA,OAAH,OAAGA,OAAH,CAAYC,YAAZ,OAAYA,YAAZ,oBACC,MAAC,IAAD,yBACE,KAAC,SAAD,EAAW,IAAI,CAAC,OAAhB,CAAwB,KAAK,CAAC,OAA9B,CAAsC,IAAI,CAAC,OAA3C,EADF,cAEE,KAAC,SAAD,EAAW,IAAI,CAAC,UAAhB,CAA2B,KAAK,CAAC,UAAjC,CAA4C,IAAI,CAAC,UAAjD,EAFF,cAIE,aAAK,SAAS,CAAC,qBAAf,oCACyB,GADzB,cAEE,aACE,SAAS,CAAC,WADZ,CAEE,OAAO,CAAE,yBAAMjB,CAAAA,OAAO,CAACkB,IAAR,CAAa,QAAb,CAAN,EAFX,sBAFF,GAJF,cAcE,eAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAE,CAACF,OAAD,EAAYC,YAA5C,mBAdF,GADD,EANH,EAHF,CA8BG,CAAC,CAAChB,WAAF,eAAiB,YAAK,SAAS,CAAC,OAAf,UAAwBA,WAAxB,EA9BpB,GADF,CAkCD,CA1DM","sourcesContent":["import { fb } from 'service';\r\nimport { useState } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { FormField } from 'components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { defaultValues, validationSchema } from './formikConfig';\r\n\r\nexport const Login = () => {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState(' ');\r\n\r\n  const login = ({ email, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        if (!res.user) {\r\n          setServerError('we are unable to log you in. please try again.');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 'auth/wrong-password') {\r\n          setServerError('invalid credential');\r\n        } else if (err.code === 'auth/user-not-found') {\r\n          setServerError('account does not exist for this email');\r\n        } else {\r\n          setServerError('Something went wrong :(');\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h1>Login</h1>\r\n\r\n      <Formik\r\n        onSubmit={login}\r\n        validateOnMount={true}\r\n        initialValues={defaultValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isValid, isSubmitting }) => (\r\n          <Form>\r\n            <FormField name=\"email\" label=\"Email\" type=\"email\" />\r\n            <FormField name=\"password\" label=\"Password\" type=\"password\" />\r\n\r\n            <div className=\"auth-link-container\">\r\n              Don't have an account?{' '}\r\n              <span\r\n                className=\"auth-link\"\r\n                onClick={() => history.push('signup')}\r\n              >\r\n                Sign up!\r\n              </span>\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={!isValid || isSubmitting}>\r\n              Login\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {!!serverError && <div className=\"error\">{serverError}</div>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}