{"ast":null,"code":"import _toConsumableArray from\"F:/react/conversation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"F:/react/conversation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"F:/react/conversation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useChat}from'context';import{useDebounce}from'hooks';import{Search}from'semantic-ui-react';import{useEffect,useRef,useState}from'react';import{addPerson,getOtherPeople}from'react-chat-engine';export var SearchUsers=function SearchUsers(_ref){var visible=_ref.visible,closeFn=_ref.closeFn;var searchRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];var debouncedSearchTerm=useDebounce(searchTerm,500);var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),searchResults=_useState6[0],setSearchResults=_useState6[1];useEffect(function(){if(visible&&searchRef){searchRef.focus();}},[visible]);var _useChat=useChat(),myChats=_useChat.myChats,setMyChats=_useChat.setMyChats,chatConfig=_useChat.chatConfig,selectedChat=_useChat.selectedChat,setSelectedChat=_useChat.setSelectedChat;var selectUser=function selectUser(username){addPerson(chatConfig,selectedChat.id,username,function(){var filteredChats=myChats.filter(function(c){return c.id!==selectedChat.id;});var updatedChat=_objectSpread(_objectSpread({},selectedChat),{},{people:[].concat(_toConsumableArray(selectedChat.people),[{person:{username:username}}])});setSelectedChat(updatedChat);setMyChats([].concat(_toConsumableArray(filteredChats),[updatedChat]));closeFn();});};useEffect(function(){if(debouncedSearchTerm){setLoading(true);getOtherPeople(chatConfig,selectedChat.id,function(chatId,data){var userNames=Object.keys(data).map(function(key){return data[key].username;}).filter(function(u){return u.toLowerCase().includes(debouncedSearchTerm.toLowerCase());});setSearchResults(userNames.map(function(u){return{title:u};}));setLoading(false);});}else{setSearchResults(null);}},[chatConfig,selectedChat,debouncedSearchTerm]);return/*#__PURE__*/_jsx(\"div\",{className:\"user-search\",style:{display:visible?'block':'none'},children:/*#__PURE__*/_jsx(Search,{fluid:true,onBlur:closeFn,loading:loading,value:searchTerm,results:searchResults,placeholder:\"search for user\",open:!!searchResults&&!loading,input:{ref:function ref(r){return searchRef=r;}},onSearchChange:function onSearchChange(e){return setSearchTerm(e.target.value);},onResultSelect:function onResultSelect(e,data){var _data$result;if((_data$result=data.result)===null||_data$result===void 0?void 0:_data$result.title){selectUser(data.result.title);}}})});};","map":{"version":3,"sources":["F:/react/conversation/src/components/SearchUsers/SearchUsers.jsx"],"names":["useChat","useDebounce","Search","useEffect","useRef","useState","addPerson","getOtherPeople","SearchUsers","visible","closeFn","searchRef","loading","setLoading","searchTerm","setSearchTerm","debouncedSearchTerm","searchResults","setSearchResults","focus","myChats","setMyChats","chatConfig","selectedChat","setSelectedChat","selectUser","username","id","filteredChats","filter","c","updatedChat","people","person","chatId","data","userNames","Object","keys","map","key","u","toLowerCase","includes","title","display","ref","r","e","target","value","result"],"mappings":"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","sourcesContent":["import { useChat } from 'context';\r\nimport { useDebounce } from 'hooks';\r\nimport { Search } from 'semantic-ui-react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { addPerson, getOtherPeople } from 'react-chat-engine';\r\n\r\nexport const SearchUsers = ({ visible, closeFn }) => {\r\n  let searchRef = useRef();\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  const [searchResults, setSearchResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (visible && searchRef) {\r\n      searchRef.focus();\r\n    }\r\n  }, [visible]);\r\n\r\n  const {\r\n    myChats,\r\n    setMyChats,\r\n    chatConfig,\r\n    selectedChat,\r\n    setSelectedChat,\r\n  } = useChat();\r\n\r\n  const selectUser = username => {\r\n    addPerson(chatConfig, selectedChat.id, username, () => {\r\n      const filteredChats = myChats.filter(c => c.id !== selectedChat.id);\r\n      const updatedChat = {\r\n        ...selectedChat,\r\n        people: [...selectedChat.people, { person: { username } }],\r\n      };\r\n      setSelectedChat(updatedChat);\r\n      setMyChats([...filteredChats, updatedChat]);\r\n      closeFn();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm) {\r\n      setLoading(true);\r\n\r\n      getOtherPeople(chatConfig, selectedChat.id, (chatId, data) => {\r\n        const userNames = Object.keys(data)\r\n          .map(key => data[key].username)\r\n          .filter(u =>\r\n            u.toLowerCase().includes(debouncedSearchTerm.toLowerCase()),\r\n          );\r\n\r\n        setSearchResults(userNames.map(u => ({ title: u })));\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setSearchResults(null);\r\n    }\r\n  }, [chatConfig, selectedChat, debouncedSearchTerm]);\r\n\r\n  return (\r\n    <div\r\n      className=\"user-search\"\r\n      style={{ display: visible ? 'block' : 'none' }}\r\n    >\r\n      <Search\r\n        fluid\r\n        onBlur={closeFn}\r\n        loading={loading}\r\n        value={searchTerm}\r\n        results={searchResults}\r\n        placeholder=\"search for user\"\r\n        open={!!searchResults && !loading}\r\n        input={{ ref: r => (searchRef = r) }}\r\n        onSearchChange={e => setSearchTerm(e.target.value)}\r\n        onResultSelect={(e, data) => {\r\n          if (data.result?.title) {\r\n            selectUser(data.result.title);\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}