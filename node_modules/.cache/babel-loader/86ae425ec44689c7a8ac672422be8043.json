{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\chat_app\\\\react-chatengine-demo\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport { useChat } from 'context';\nimport { useEffect } from 'react';\nimport { getChats, ChatEngine } from 'react-chat-engine';\nexport const Chat = () => {\n  _s();\n\n  const {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat\n  } = useChat();\n  useEffect(() => {\n    console.log('My Chats: ', myChats);\n  }, [myChats]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!!chatConfig && /*#__PURE__*/_jsxDEV(ChatEngine, {\n      hideUI: true,\n      userName: chatConfig.userName,\n      projectID: chatConfig.projectID,\n      userSecret: chatConfig.userSecret,\n      onConnect: () => {\n        getChats(chatConfig, setMyChats);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-chat\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chat-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/pointLeft.png\",\n            className: \"point-left\",\n            alt: \"point-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), \"Select a CHAT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"xvk4e9XC0l/33pbGk9yXWQPOX0w=\", false, function () {\n  return [useChat];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["F:/react/chat_app/react-chatengine-demo/src/components/Chat/Chat.jsx"],"names":["useChat","useEffect","getChats","ChatEngine","Chat","myChats","setMyChats","chatConfig","selectedChat","console","log","userName","projectID","userSecret"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,SAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mBAArC;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,MAAoDR,OAAO,EAAjE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,OAA1B;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACE;AAAA,eACG,CAAC,CAACE,UAAF,iBACC,QAAC,UAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,QAAQ,EAAEA,UAAU,CAACI,QAFvB;AAGE,MAAA,SAAS,EAAEJ,UAAU,CAACK,SAHxB;AAIE,MAAA,UAAU,EAAEL,UAAU,CAACM,UAJzB;AAKE,MAAA,SAAS,EAAE,MAAM;AACfX,QAAAA,QAAQ,CAACK,UAAD,EAAaD,UAAb,CAAR;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGE,YAAY,gBACX,qCADW,gBAGX;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AACE,YAAA,GAAG,EAAC,oBADN;AAEE,YAAA,SAAS,EAAC,YAFZ;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA+BD,CAtCM;;GAAMJ,I;UAC+CJ,O;;;KAD/CI,I","sourcesContent":["import { useChat } from 'context';\r\nimport { useEffect } from 'react';\r\nimport { getChats, ChatEngine } from 'react-chat-engine';\r\n\r\nexport const Chat = () => {\r\n  const { myChats, setMyChats, chatConfig, selectedChat } = useChat();\r\n\r\n  useEffect(() => {\r\n    console.log('My Chats: ', myChats);\r\n  }, [myChats]);\r\n\r\n  return (\r\n    <>\r\n      {!!chatConfig && (\r\n        <ChatEngine\r\n          hideUI={true}\r\n          userName={chatConfig.userName}\r\n          projectID={chatConfig.projectID}\r\n          userSecret={chatConfig.userSecret}\r\n          onConnect={() => {\r\n            getChats(chatConfig, setMyChats);\r\n          }}\r\n        />\r\n      )}\r\n      <div className=\"chat-container\">\r\n        <div className=\"current-chat\">\r\n          {selectedChat ? (\r\n            <></>\r\n          ) : (\r\n            <div className=\"no-chat-selected\">\r\n              <img\r\n                src=\"/img/pointLeft.png\"\r\n                className=\"point-left\"\r\n                alt=\"point-left\"\r\n              />\r\n              Select a CHAT\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}