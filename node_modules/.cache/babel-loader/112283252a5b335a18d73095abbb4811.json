{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\chat_app\\\\react-chatengine-demo\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { defaultValues, validationSchema } from './formikConfig';\nimport { Formik, Form } from 'formik';\nimport { FormField } from 'components';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport { fb } from 'service';\nexport const Login = () => {\n  _s();\n\n  const history = useHistory();\n  const [serverError, setServerError] = useState(' ');\n\n  const login = ({\n    email,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    fb.auth.signInWithEmailAndPassword(email, password).then(res => {\n      if (!res.user) {\n        setServerError('we are unable to log you in. please try again.');\n      }\n    }).catch(err => {\n      if (err.code === 'auth/wrong-password') {\n        setServerError('invalid credential');\n      } else if (err.code === 'auth/user-not-found') {\n        setServerError('account does not exist for this email');\n      } else {\n        setServerError('Something went wrong :(');\n      }\n    }).finally(() => setSubmitting(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: login,\n      validateOnMount: true,\n      initialValues: defaultValues,\n      validationSchema: validationSchema,\n      children: ({\n        isValid,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          name: \"email\",\n          label: \"Email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-link-container\",\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"auth-link\",\n            onClick: () => history.push('signup'),\n            children: \"Sign up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isValid || isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), !!serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"nivOWH1CCgQGoMksoVTX4Csf+FU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/react/chat_app/react-chatengine-demo/src/components/Login/Login.jsx"],"names":["defaultValues","validationSchema","Formik","Form","FormField","useHistory","useState","fb","Login","history","serverError","setServerError","login","email","password","setSubmitting","auth","signInWithEmailAndPassword","then","res","user","catch","err","code","finally","isValid","isSubmitting","push"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,gBAAhD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAT,QAAmB,SAAnB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,GAAD,CAA9C;;AAEA,QAAMM,KAAK,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAsB;AAAEC,IAAAA;AAAF,GAAtB,KAA4C;AACxDR,IAAAA,EAAE,CAACS,IAAH,CACGC,0BADH,CAC8BJ,KAD9B,EACqCC,QADrC,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACC,IAAT,EAAe;AACbT,QAAAA,cAAc,CAAC,gDAAD,CAAd;AACD;AACF,KANH,EAOGU,KAPH,CAOSC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACC,IAAJ,KAAa,qBAAjB,EAAwC;AACtCZ,QAAAA,cAAc,CAAC,oBAAD,CAAd;AACD,OAFD,MAEO,IAAIW,GAAG,CAACC,IAAJ,KAAa,qBAAjB,EAAwC;AAC7CZ,QAAAA,cAAc,CAAC,uCAAD,CAAd;AACD,OAFM,MAEA;AACLA,QAAAA,cAAc,CAAC,yBAAD,CAAd;AACD;AACF,KAfH,EAgBGa,OAhBH,CAgBW,MAAMT,aAAa,CAAC,KAAD,CAhB9B;AAiBD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAEH,KADZ;AAEE,MAAA,eAAe,EAAE,IAFnB;AAGE,MAAA,aAAa,EAAEZ,aAHjB;AAIE,MAAA,gBAAgB,EAAEC,gBAJpB;AAAA,gBAMG,CAAC;AAAEwB,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,OAAhB;AAAwB,UAAA,KAAK,EAAC,OAA9B;AAAsC,UAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,UAAhB;AAA2B,UAAA,KAAK,EAAC,UAAjC;AAA4C,UAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,+CACyB,GADzB,eAEE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,OAAO,EAAE,MAAMjB,OAAO,CAACkB,IAAR,CAAa,QAAb,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAcE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAE,CAACF,OAAD,IAAYC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAHF,EA8BG,CAAC,CAAChB,WAAF,iBAAiB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,YA9BpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA1DM;;GAAMF,K;UACKH,U;;;KADLG,K","sourcesContent":["import { defaultValues, validationSchema } from './formikConfig';\r\nimport { Formik, Form } from 'formik';\r\nimport { FormField } from 'components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { fb } from 'service';\r\n\r\nexport const Login = () => {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState(' ');\r\n\r\n  const login = ({ email, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        if (!res.user) {\r\n          setServerError('we are unable to log you in. please try again.');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.code === 'auth/wrong-password') {\r\n          setServerError('invalid credential');\r\n        } else if (err.code === 'auth/user-not-found') {\r\n          setServerError('account does not exist for this email');\r\n        } else {\r\n          setServerError('Something went wrong :(');\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h1>Login</h1>\r\n\r\n      <Formik\r\n        onSubmit={login}\r\n        validateOnMount={true}\r\n        initialValues={defaultValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isValid, isSubmitting }) => (\r\n          <Form>\r\n            <FormField name=\"email\" label=\"Email\" type=\"email\" />\r\n            <FormField name=\"password\" label=\"Password\" type=\"password\" />\r\n\r\n            <div className=\"auth-link-container\">\r\n              Don't have an account?{' '}\r\n              <span\r\n                className=\"auth-link\"\r\n                onClick={() => history.push('signup')}\r\n              >\r\n                Sign up!\r\n              </span>\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={!isValid || isSubmitting}>\r\n              Login\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {!!serverError && <div className=\"error\">{serverError}</div>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}