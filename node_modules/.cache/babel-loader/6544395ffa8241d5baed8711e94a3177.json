{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\chat_app\\\\react-chatengine-demo\\\\src\\\\components\\\\ChatAvatar\\\\ChatAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport { fb } from 'service';\nimport { notMe } from 'helpers';\nimport { useEffect, useState } from 'react';\nimport { useChat } from 'context';\nimport { Image } from 'semantic-ui-react';\nexport const ChatAvatar = ({\n  chat,\n  username,\n  className\n}) => {\n  _s();\n\n  const {\n    chatConfig\n  } = useChat();\n  const [avatar, setAvatar] = useState('');\n  useEffect(() => {\n    fb.firestore;\n  }, [chat, chatConfig, username]);\n  return avatar ? /*#__PURE__*/_jsxDEV(Image, {\n    className: className || 'chat-list-avatar',\n    src: avatar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className || 'empty-avatar',\n    children: notMe(chatConfig, chat)[0].toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatAvatar, \"3XoFMFvmyCoA2EKPmFWLGWvzAEo=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatAvatar\");","map":{"version":3,"sources":["F:/react/chat_app/react-chatengine-demo/src/components/ChatAvatar/ChatAvatar.jsx"],"names":["fb","notMe","useEffect","useState","useChat","Image","ChatAvatar","chat","username","className","chatConfig","avatar","setAvatar","firestore","toUpperCase"],"mappings":";;;;;AAAA,SAASA,EAAT,QAAmB,SAAnB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,OAAO,EAA9B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,EAAE,CAACa,SAAH;AACD,GAFQ,EAEN,CAACN,IAAD,EAAOG,UAAP,EAAmBF,QAAnB,CAFM,CAAT;AAIA,SAAOG,MAAM,gBACX,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,SAAS,IAAI,kBAA/B;AAAmD,IAAA,GAAG,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,UADW,gBAGX;AAAK,IAAA,SAAS,EAAEF,SAAS,IAAI,cAA7B;AAAA,cACGR,KAAK,CAACS,UAAD,EAAaH,IAAb,CAAL,CAAwB,CAAxB,EAA2BO,WAA3B;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAOD,CAfM;;GAAMR,U;UACYF,O;;;KADZE,U","sourcesContent":["import { fb } from 'service';\r\nimport { notMe } from 'helpers';\r\nimport { useEffect, useState } from 'react';\r\nimport { useChat } from 'context';\r\nimport { Image } from 'semantic-ui-react';\r\n\r\nexport const ChatAvatar = ({ chat, username, className }) => {\r\n  const { chatConfig } = useChat();\r\n  const [avatar, setAvatar] = useState('');\r\n\r\n  useEffect(() => {\r\n    fb.firestore;\r\n  }, [chat, chatConfig, username]);\r\n\r\n  return avatar ? (\r\n    <Image className={className || 'chat-list-avatar'} src={avatar} />\r\n  ) : (\r\n    <div className={className || 'empty-avatar'}>\r\n      {notMe(chatConfig, chat)[0].toUpperCase()}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}